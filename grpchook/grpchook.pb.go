// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: grpchook.proto

package grpchook

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//------------------------------------------------------------------------------
// Request Message
//------------------------------------------------------------------------------
type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node      string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Clientid  string `protobuf:"bytes,3,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Username  string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Ipaddress string `protobuf:"bytes,5,opt,name=ipaddress,proto3" json:"ipaddress,omitempty"`
	Keepalive int32  `protobuf:"varint,6,opt,name=keepalive,proto3" json:"keepalive,omitempty"`
	ProtoVer  int32  `protobuf:"varint,7,opt,name=proto_ver,json=protoVer,proto3" json:"proto_ver,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ConnectRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *ConnectRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *ConnectRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ConnectRequest) GetIpaddress() string {
	if x != nil {
		return x.Ipaddress
	}
	return ""
}

func (x *ConnectRequest) GetKeepalive() int32 {
	if x != nil {
		return x.Keepalive
	}
	return 0
}

func (x *ConnectRequest) GetProtoVer() int32 {
	if x != nil {
		return x.ProtoVer
	}
	return 0
}

type ConnackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node      string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Clientid  string `protobuf:"bytes,3,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Username  string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Ipaddress string `protobuf:"bytes,5,opt,name=ipaddress,proto3" json:"ipaddress,omitempty"`
	Keepalive int32  `protobuf:"varint,6,opt,name=keepalive,proto3" json:"keepalive,omitempty"`
	ProtoVer  int32  `protobuf:"varint,7,opt,name=proto_ver,json=protoVer,proto3" json:"proto_ver,omitempty"`
	ConnAck   string `protobuf:"bytes,8,opt,name=conn_ack,json=connAck,proto3" json:"conn_ack,omitempty"`
}

func (x *ConnackRequest) Reset() {
	*x = ConnackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnackRequest) ProtoMessage() {}

func (x *ConnackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnackRequest.ProtoReflect.Descriptor instead.
func (*ConnackRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{1}
}

func (x *ConnackRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ConnackRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *ConnackRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *ConnackRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ConnackRequest) GetIpaddress() string {
	if x != nil {
		return x.Ipaddress
	}
	return ""
}

func (x *ConnackRequest) GetKeepalive() int32 {
	if x != nil {
		return x.Keepalive
	}
	return 0
}

func (x *ConnackRequest) GetProtoVer() int32 {
	if x != nil {
		return x.ProtoVer
	}
	return 0
}

func (x *ConnackRequest) GetConnAck() string {
	if x != nil {
		return x.ConnAck
	}
	return ""
}

type ConnectedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action      string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node        string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Clientid    string `protobuf:"bytes,3,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Username    string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Ipaddress   string `protobuf:"bytes,5,opt,name=ipaddress,proto3" json:"ipaddress,omitempty"`
	Keepalive   int32  `protobuf:"varint,6,opt,name=keepalive,proto3" json:"keepalive,omitempty"`
	ProtoVer    int32  `protobuf:"varint,7,opt,name=proto_ver,json=protoVer,proto3" json:"proto_ver,omitempty"`
	ConnectedAt int64  `protobuf:"varint,8,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
}

func (x *ConnectedRequest) Reset() {
	*x = ConnectedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedRequest) ProtoMessage() {}

func (x *ConnectedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedRequest.ProtoReflect.Descriptor instead.
func (*ConnectedRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectedRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ConnectedRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *ConnectedRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *ConnectedRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ConnectedRequest) GetIpaddress() string {
	if x != nil {
		return x.Ipaddress
	}
	return ""
}

func (x *ConnectedRequest) GetKeepalive() int32 {
	if x != nil {
		return x.Keepalive
	}
	return 0
}

func (x *ConnectedRequest) GetProtoVer() int32 {
	if x != nil {
		return x.ProtoVer
	}
	return 0
}

func (x *ConnectedRequest) GetConnectedAt() int64 {
	if x != nil {
		return x.ConnectedAt
	}
	return 0
}

type DisconnectedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action         string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node           string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Clientid       string `protobuf:"bytes,3,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Username       string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Reason         string `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`
	DisconnectedAt int64  `protobuf:"varint,8,opt,name=disconnected_at,json=disconnectedAt,proto3" json:"disconnected_at,omitempty"`
}

func (x *DisconnectedRequest) Reset() {
	*x = DisconnectedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectedRequest) ProtoMessage() {}

func (x *DisconnectedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectedRequest.ProtoReflect.Descriptor instead.
func (*DisconnectedRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{3}
}

func (x *DisconnectedRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DisconnectedRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *DisconnectedRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *DisconnectedRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DisconnectedRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DisconnectedRequest) GetDisconnectedAt() int64 {
	if x != nil {
		return x.DisconnectedAt
	}
	return 0
}

type AuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId      string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Username      string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Protocol      string `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Peerhost      string `protobuf:"bytes,5,opt,name=peerhost,proto3" json:"peerhost,omitempty"`
	Sockport      int32  `protobuf:"varint,6,opt,name=sockport,proto3" json:"sockport,omitempty"`
	Peercert      string `protobuf:"bytes,7,opt,name=peercert,proto3" json:"peercert,omitempty"`
	IsBridge      bool   `protobuf:"varint,8,opt,name=is_bridge,json=isBridge,proto3" json:"is_bridge,omitempty"`
	IsSuperuser   bool   `protobuf:"varint,9,opt,name=is_superuser,json=isSuperuser,proto3" json:"is_superuser,omitempty"`
	Mountpoint    string `protobuf:"bytes,10,opt,name=mountpoint,proto3" json:"mountpoint,omitempty"`
	Zone          string `protobuf:"bytes,11,opt,name=zone,proto3" json:"zone,omitempty"`
	TlsCommonName string `protobuf:"bytes,12,opt,name=tls_common_name,json=tlsCommonName,proto3" json:"tls_common_name,omitempty"`
	TlsSubject    string `protobuf:"bytes,13,opt,name=tls_subject,json=tlsSubject,proto3" json:"tls_subject,omitempty"`
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{4}
}

func (x *AuthenticateRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthenticateRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthenticateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthenticateRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *AuthenticateRequest) GetPeerhost() string {
	if x != nil {
		return x.Peerhost
	}
	return ""
}

func (x *AuthenticateRequest) GetSockport() int32 {
	if x != nil {
		return x.Sockport
	}
	return 0
}

func (x *AuthenticateRequest) GetPeercert() string {
	if x != nil {
		return x.Peercert
	}
	return ""
}

func (x *AuthenticateRequest) GetIsBridge() bool {
	if x != nil {
		return x.IsBridge
	}
	return false
}

func (x *AuthenticateRequest) GetIsSuperuser() bool {
	if x != nil {
		return x.IsSuperuser
	}
	return false
}

func (x *AuthenticateRequest) GetMountpoint() string {
	if x != nil {
		return x.Mountpoint
	}
	return ""
}

func (x *AuthenticateRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *AuthenticateRequest) GetTlsCommonName() string {
	if x != nil {
		return x.TlsCommonName
	}
	return ""
}

func (x *AuthenticateRequest) GetTlsSubject() string {
	if x != nil {
		return x.TlsSubject
	}
	return ""
}

type CheckAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId      string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Username      string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Protocol      string `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Peerhost      string `protobuf:"bytes,5,opt,name=peerhost,proto3" json:"peerhost,omitempty"`
	Sockport      int32  `protobuf:"varint,6,opt,name=sockport,proto3" json:"sockport,omitempty"`
	Peercert      string `protobuf:"bytes,7,opt,name=peercert,proto3" json:"peercert,omitempty"`
	IsBridge      bool   `protobuf:"varint,8,opt,name=is_bridge,json=isBridge,proto3" json:"is_bridge,omitempty"`
	IsSuperuser   bool   `protobuf:"varint,9,opt,name=is_superuser,json=isSuperuser,proto3" json:"is_superuser,omitempty"`
	Mountpoint    string `protobuf:"bytes,10,opt,name=mountpoint,proto3" json:"mountpoint,omitempty"`
	Zone          string `protobuf:"bytes,11,opt,name=zone,proto3" json:"zone,omitempty"`
	TlsCommonName string `protobuf:"bytes,12,opt,name=tls_common_name,json=tlsCommonName,proto3" json:"tls_common_name,omitempty"`
	TlsSubject    string `protobuf:"bytes,13,opt,name=tls_subject,json=tlsSubject,proto3" json:"tls_subject,omitempty"`
	Topic         string `protobuf:"bytes,14,opt,name=topic,proto3" json:"topic,omitempty"`
	Access        string `protobuf:"bytes,15,opt,name=access,proto3" json:"access,omitempty"`
}

func (x *CheckAclRequest) Reset() {
	*x = CheckAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAclRequest) ProtoMessage() {}

func (x *CheckAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAclRequest.ProtoReflect.Descriptor instead.
func (*CheckAclRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{5}
}

func (x *CheckAclRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CheckAclRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CheckAclRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CheckAclRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *CheckAclRequest) GetPeerhost() string {
	if x != nil {
		return x.Peerhost
	}
	return ""
}

func (x *CheckAclRequest) GetSockport() int32 {
	if x != nil {
		return x.Sockport
	}
	return 0
}

func (x *CheckAclRequest) GetPeercert() string {
	if x != nil {
		return x.Peercert
	}
	return ""
}

func (x *CheckAclRequest) GetIsBridge() bool {
	if x != nil {
		return x.IsBridge
	}
	return false
}

func (x *CheckAclRequest) GetIsSuperuser() bool {
	if x != nil {
		return x.IsSuperuser
	}
	return false
}

func (x *CheckAclRequest) GetMountpoint() string {
	if x != nil {
		return x.Mountpoint
	}
	return ""
}

func (x *CheckAclRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *CheckAclRequest) GetTlsCommonName() string {
	if x != nil {
		return x.TlsCommonName
	}
	return ""
}

func (x *CheckAclRequest) GetTlsSubject() string {
	if x != nil {
		return x.TlsSubject
	}
	return ""
}

func (x *CheckAclRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CheckAclRequest) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action   string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node     string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Clientid string `protobuf:"bytes,3,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Topic    string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribeRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SubscribeRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *SubscribeRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *SubscribeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SubscribeRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type UnsubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action   string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node     string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Clientid string `protobuf:"bytes,3,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Topic    string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *UnsubscribeRequest) Reset() {
	*x = UnsubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequest) ProtoMessage() {}

func (x *UnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{7}
}

func (x *UnsubscribeRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *UnsubscribeRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *UnsubscribeRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *UnsubscribeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UnsubscribeRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type SessionCreatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node      string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Clientid  string `protobuf:"bytes,3,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Username  string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Topic     string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	CreatedAt int64  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *SessionCreatedRequest) Reset() {
	*x = SessionCreatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionCreatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionCreatedRequest) ProtoMessage() {}

func (x *SessionCreatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionCreatedRequest.ProtoReflect.Descriptor instead.
func (*SessionCreatedRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{8}
}

func (x *SessionCreatedRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SessionCreatedRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *SessionCreatedRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *SessionCreatedRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SessionCreatedRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SessionCreatedRequest) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type SessionSubscribedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action   string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node     string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Clientid string `protobuf:"bytes,3,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Topic    string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *SessionSubscribedRequest) Reset() {
	*x = SessionSubscribedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionSubscribedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionSubscribedRequest) ProtoMessage() {}

func (x *SessionSubscribedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionSubscribedRequest.ProtoReflect.Descriptor instead.
func (*SessionSubscribedRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{9}
}

func (x *SessionSubscribedRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SessionSubscribedRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *SessionSubscribedRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *SessionSubscribedRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SessionSubscribedRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type SessionUnsubscribedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action   string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node     string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Clientid string `protobuf:"bytes,3,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Topic    string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *SessionUnsubscribedRequest) Reset() {
	*x = SessionUnsubscribedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUnsubscribedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUnsubscribedRequest) ProtoMessage() {}

func (x *SessionUnsubscribedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUnsubscribedRequest.ProtoReflect.Descriptor instead.
func (*SessionUnsubscribedRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{10}
}

func (x *SessionUnsubscribedRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SessionUnsubscribedRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *SessionUnsubscribedRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *SessionUnsubscribedRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SessionUnsubscribedRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type SessionTerminatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action   string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node     string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Clientid string `protobuf:"bytes,3,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Reason   string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *SessionTerminatedRequest) Reset() {
	*x = SessionTerminatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionTerminatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionTerminatedRequest) ProtoMessage() {}

func (x *SessionTerminatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionTerminatedRequest.ProtoReflect.Descriptor instead.
func (*SessionTerminatedRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{11}
}

func (x *SessionTerminatedRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SessionTerminatedRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *SessionTerminatedRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *SessionTerminatedRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SessionTerminatedRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type MessagePublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action       string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node         string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	FromClientId string `protobuf:"bytes,3,opt,name=from_client_id,json=fromClientId,proto3" json:"from_client_id,omitempty"`
	FromUsername string `protobuf:"bytes,4,opt,name=from_username,json=fromUsername,proto3" json:"from_username,omitempty"`
	Topic        string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	Qos          int32  `protobuf:"varint,6,opt,name=qos,proto3" json:"qos,omitempty"`
	Retain       bool   `protobuf:"varint,7,opt,name=retain,proto3" json:"retain,omitempty"`
	Payload      string `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
	Ts           int64  `protobuf:"varint,9,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *MessagePublishRequest) Reset() {
	*x = MessagePublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePublishRequest) ProtoMessage() {}

func (x *MessagePublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePublishRequest.ProtoReflect.Descriptor instead.
func (*MessagePublishRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{12}
}

func (x *MessagePublishRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *MessagePublishRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *MessagePublishRequest) GetFromClientId() string {
	if x != nil {
		return x.FromClientId
	}
	return ""
}

func (x *MessagePublishRequest) GetFromUsername() string {
	if x != nil {
		return x.FromUsername
	}
	return ""
}

func (x *MessagePublishRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *MessagePublishRequest) GetQos() int32 {
	if x != nil {
		return x.Qos
	}
	return 0
}

func (x *MessagePublishRequest) GetRetain() bool {
	if x != nil {
		return x.Retain
	}
	return false
}

func (x *MessagePublishRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *MessagePublishRequest) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type MessageDeliveredRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action       string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node         string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	FromClientId string `protobuf:"bytes,3,opt,name=from_client_id,json=fromClientId,proto3" json:"from_client_id,omitempty"`
	FromUsername string `protobuf:"bytes,4,opt,name=from_username,json=fromUsername,proto3" json:"from_username,omitempty"`
	Topic        string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	Qos          int32  `protobuf:"varint,6,opt,name=qos,proto3" json:"qos,omitempty"`
	Retain       bool   `protobuf:"varint,7,opt,name=retain,proto3" json:"retain,omitempty"`
	Payload      string `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
	Ts           int64  `protobuf:"varint,9,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *MessageDeliveredRequest) Reset() {
	*x = MessageDeliveredRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDeliveredRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDeliveredRequest) ProtoMessage() {}

func (x *MessageDeliveredRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDeliveredRequest.ProtoReflect.Descriptor instead.
func (*MessageDeliveredRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{13}
}

func (x *MessageDeliveredRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *MessageDeliveredRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *MessageDeliveredRequest) GetFromClientId() string {
	if x != nil {
		return x.FromClientId
	}
	return ""
}

func (x *MessageDeliveredRequest) GetFromUsername() string {
	if x != nil {
		return x.FromUsername
	}
	return ""
}

func (x *MessageDeliveredRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *MessageDeliveredRequest) GetQos() int32 {
	if x != nil {
		return x.Qos
	}
	return 0
}

func (x *MessageDeliveredRequest) GetRetain() bool {
	if x != nil {
		return x.Retain
	}
	return false
}

func (x *MessageDeliveredRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *MessageDeliveredRequest) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type MessageAckedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action       string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node         string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	FromClientId string `protobuf:"bytes,3,opt,name=from_client_id,json=fromClientId,proto3" json:"from_client_id,omitempty"`
	FromUsername string `protobuf:"bytes,4,opt,name=from_username,json=fromUsername,proto3" json:"from_username,omitempty"`
	Topic        string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	Qos          int32  `protobuf:"varint,6,opt,name=qos,proto3" json:"qos,omitempty"`
	Retain       bool   `protobuf:"varint,7,opt,name=retain,proto3" json:"retain,omitempty"`
	Payload      string `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
	Ts           int64  `protobuf:"varint,9,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *MessageAckedRequest) Reset() {
	*x = MessageAckedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAckedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAckedRequest) ProtoMessage() {}

func (x *MessageAckedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAckedRequest.ProtoReflect.Descriptor instead.
func (*MessageAckedRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{14}
}

func (x *MessageAckedRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *MessageAckedRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *MessageAckedRequest) GetFromClientId() string {
	if x != nil {
		return x.FromClientId
	}
	return ""
}

func (x *MessageAckedRequest) GetFromUsername() string {
	if x != nil {
		return x.FromUsername
	}
	return ""
}

func (x *MessageAckedRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *MessageAckedRequest) GetQos() int32 {
	if x != nil {
		return x.Qos
	}
	return 0
}

func (x *MessageAckedRequest) GetRetain() bool {
	if x != nil {
		return x.Retain
	}
	return false
}

func (x *MessageAckedRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *MessageAckedRequest) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type MessageDroppedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action     string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node       string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	ByClientId string `protobuf:"bytes,3,opt,name=by_client_id,json=byClientId,proto3" json:"by_client_id,omitempty"`
	ByUsername string `protobuf:"bytes,4,opt,name=by_username,json=byUsername,proto3" json:"by_username,omitempty"`
	Topic      string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	Qos        int32  `protobuf:"varint,6,opt,name=qos,proto3" json:"qos,omitempty"`
	Retain     bool   `protobuf:"varint,7,opt,name=retain,proto3" json:"retain,omitempty"`
	Payload    string `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
	Ts         int64  `protobuf:"varint,10,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *MessageDroppedRequest) Reset() {
	*x = MessageDroppedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDroppedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDroppedRequest) ProtoMessage() {}

func (x *MessageDroppedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDroppedRequest.ProtoReflect.Descriptor instead.
func (*MessageDroppedRequest) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{15}
}

func (x *MessageDroppedRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *MessageDroppedRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *MessageDroppedRequest) GetByClientId() string {
	if x != nil {
		return x.ByClientId
	}
	return ""
}

func (x *MessageDroppedRequest) GetByUsername() string {
	if x != nil {
		return x.ByUsername
	}
	return ""
}

func (x *MessageDroppedRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *MessageDroppedRequest) GetQos() int32 {
	if x != nil {
		return x.Qos
	}
	return 0
}

func (x *MessageDroppedRequest) GetRetain() bool {
	if x != nil {
		return x.Retain
	}
	return false
}

func (x *MessageDroppedRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *MessageDroppedRequest) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

//------------------------------------------------------------------------------
// Response Message
//------------------------------------------------------------------------------
type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{16}
}

func (x *ConnectResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ConnectResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ConnackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ConnackResponse) Reset() {
	*x = ConnackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnackResponse) ProtoMessage() {}

func (x *ConnackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnackResponse.ProtoReflect.Descriptor instead.
func (*ConnackResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{17}
}

func (x *ConnackResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ConnackResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ConnectedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ConnectedResponse) Reset() {
	*x = ConnectedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedResponse) ProtoMessage() {}

func (x *ConnectedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedResponse.ProtoReflect.Descriptor instead.
func (*ConnectedResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{18}
}

func (x *ConnectedResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ConnectedResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DisconnectedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DisconnectedResponse) Reset() {
	*x = DisconnectedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectedResponse) ProtoMessage() {}

func (x *DisconnectedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectedResponse.ProtoReflect.Descriptor instead.
func (*DisconnectedResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{19}
}

func (x *DisconnectedResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *DisconnectedResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg         string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	IsSuperuser bool   `protobuf:"varint,3,opt,name=is_superuser,json=isSuperuser,proto3" json:"is_superuser,omitempty"`
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{20}
}

func (x *AuthenticateResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *AuthenticateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AuthenticateResponse) GetIsSuperuser() bool {
	if x != nil {
		return x.IsSuperuser
	}
	return false
}

type CheckAclResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CheckAclResponse) Reset() {
	*x = CheckAclResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAclResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAclResponse) ProtoMessage() {}

func (x *CheckAclResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAclResponse.ProtoReflect.Descriptor instead.
func (*CheckAclResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{21}
}

func (x *CheckAclResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *CheckAclResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{22}
}

func (x *SubscribeResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *SubscribeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UnsubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UnsubscribeResponse) Reset() {
	*x = UnsubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeResponse) ProtoMessage() {}

func (x *UnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{23}
}

func (x *UnsubscribeResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *UnsubscribeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SessionCreatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SessionCreatedResponse) Reset() {
	*x = SessionCreatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionCreatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionCreatedResponse) ProtoMessage() {}

func (x *SessionCreatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionCreatedResponse.ProtoReflect.Descriptor instead.
func (*SessionCreatedResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{24}
}

func (x *SessionCreatedResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *SessionCreatedResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SessionSubscribedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SessionSubscribedResponse) Reset() {
	*x = SessionSubscribedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionSubscribedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionSubscribedResponse) ProtoMessage() {}

func (x *SessionSubscribedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionSubscribedResponse.ProtoReflect.Descriptor instead.
func (*SessionSubscribedResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{25}
}

func (x *SessionSubscribedResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *SessionSubscribedResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SessionUnsubscribedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SessionUnsubscribedResponse) Reset() {
	*x = SessionUnsubscribedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUnsubscribedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUnsubscribedResponse) ProtoMessage() {}

func (x *SessionUnsubscribedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUnsubscribedResponse.ProtoReflect.Descriptor instead.
func (*SessionUnsubscribedResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{26}
}

func (x *SessionUnsubscribedResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *SessionUnsubscribedResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SessionTerminatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SessionTerminatedResponse) Reset() {
	*x = SessionTerminatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionTerminatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionTerminatedResponse) ProtoMessage() {}

func (x *SessionTerminatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionTerminatedResponse.ProtoReflect.Descriptor instead.
func (*SessionTerminatedResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{27}
}

func (x *SessionTerminatedResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *SessionTerminatedResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type MessagePublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MessagePublishResponse) Reset() {
	*x = MessagePublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePublishResponse) ProtoMessage() {}

func (x *MessagePublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePublishResponse.ProtoReflect.Descriptor instead.
func (*MessagePublishResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{28}
}

func (x *MessagePublishResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *MessagePublishResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type MessageDeliveredResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MessageDeliveredResponse) Reset() {
	*x = MessageDeliveredResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDeliveredResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDeliveredResponse) ProtoMessage() {}

func (x *MessageDeliveredResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDeliveredResponse.ProtoReflect.Descriptor instead.
func (*MessageDeliveredResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{29}
}

func (x *MessageDeliveredResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *MessageDeliveredResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type MessageAckedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MessageAckedResponse) Reset() {
	*x = MessageAckedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAckedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAckedResponse) ProtoMessage() {}

func (x *MessageAckedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAckedResponse.ProtoReflect.Descriptor instead.
func (*MessageAckedResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{30}
}

func (x *MessageAckedResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *MessageAckedResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type MessageDroppedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MessageDroppedResponse) Reset() {
	*x = MessageDroppedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpchook_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDroppedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDroppedResponse) ProtoMessage() {}

func (x *MessageDroppedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpchook_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDroppedResponse.ProtoReflect.Descriptor instead.
func (*MessageDroppedResponse) Descriptor() ([]byte, []int) {
	return file_grpchook_proto_rawDescGZIP(), []int{31}
}

func (x *MessageDroppedResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *MessageDroppedResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_grpchook_proto protoreflect.FileDescriptor

var file_grpchook_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x22, 0xcd, 0x01, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x65, 0x72, 0x22, 0xe8, 0x01, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x6e, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x6e, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x6e, 0x41, 0x63, 0x6b, 0x22, 0xf2, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x56, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x13, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x96, 0x03, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x6f, 0x63, 0x6b, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x6f, 0x63, 0x6b, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x63,
	0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x63,
	0x65, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x6c, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6c, 0x73, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0xc0, 0x03, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x63, 0x6b, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x6f, 0x63, 0x6b, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x65, 0x65, 0x72, 0x63, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x65, 0x65, 0x72, 0x63, 0x65, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x42,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x75, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6c, 0x73, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x22, 0xb0, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x96, 0x01,
	0x0a, 0x1a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x96, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0xf8, 0x01, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x17, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x71, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03,
	0x71, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73,
	0x22, 0xf0, 0x01, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x72, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x79, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x79,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x79, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x10, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6f,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x74, 0x73, 0x22, 0x3b, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x3b, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3d, 0x0a,
	0x11, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x40, 0x0a, 0x14,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x63,
	0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0x3d, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x3f, 0x0a, 0x13, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0x42, 0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x45, 0x0a, 0x19, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x47, 0x0a, 0x1b,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x45, 0x0a, 0x19, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x42, 0x0a, 0x16,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x44, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x40, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x42, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xbb, 0x0a, 0x0a,
	0x07, 0x52, 0x70, 0x63, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x44, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x61, 0x63, 0x6b, 0x12,
	0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f,
	0x6f, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x53, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f,
	0x6b, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x6c, 0x12, 0x19, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f,
	0x6f, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f,
	0x6b, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x50, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x22, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x13, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x22, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68,
	0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12,
	0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f,
	0x6b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f,
	0x6f, 0x6b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x68,
	0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x70,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x23, 0x0a, 0x08, 0x67, 0x72,
	0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x42, 0x08, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b,
	0x50, 0x00, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x68, 0x6f, 0x6f, 0x6b, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpchook_proto_rawDescOnce sync.Once
	file_grpchook_proto_rawDescData = file_grpchook_proto_rawDesc
)

func file_grpchook_proto_rawDescGZIP() []byte {
	file_grpchook_proto_rawDescOnce.Do(func() {
		file_grpchook_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpchook_proto_rawDescData)
	})
	return file_grpchook_proto_rawDescData
}

var file_grpchook_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_grpchook_proto_goTypes = []interface{}{
	(*ConnectRequest)(nil),              // 0: grpchook.ConnectRequest
	(*ConnackRequest)(nil),              // 1: grpchook.ConnackRequest
	(*ConnectedRequest)(nil),            // 2: grpchook.ConnectedRequest
	(*DisconnectedRequest)(nil),         // 3: grpchook.DisconnectedRequest
	(*AuthenticateRequest)(nil),         // 4: grpchook.AuthenticateRequest
	(*CheckAclRequest)(nil),             // 5: grpchook.CheckAclRequest
	(*SubscribeRequest)(nil),            // 6: grpchook.SubscribeRequest
	(*UnsubscribeRequest)(nil),          // 7: grpchook.UnsubscribeRequest
	(*SessionCreatedRequest)(nil),       // 8: grpchook.SessionCreatedRequest
	(*SessionSubscribedRequest)(nil),    // 9: grpchook.SessionSubscribedRequest
	(*SessionUnsubscribedRequest)(nil),  // 10: grpchook.SessionUnsubscribedRequest
	(*SessionTerminatedRequest)(nil),    // 11: grpchook.SessionTerminatedRequest
	(*MessagePublishRequest)(nil),       // 12: grpchook.MessagePublishRequest
	(*MessageDeliveredRequest)(nil),     // 13: grpchook.MessageDeliveredRequest
	(*MessageAckedRequest)(nil),         // 14: grpchook.MessageAckedRequest
	(*MessageDroppedRequest)(nil),       // 15: grpchook.MessageDroppedRequest
	(*ConnectResponse)(nil),             // 16: grpchook.ConnectResponse
	(*ConnackResponse)(nil),             // 17: grpchook.ConnackResponse
	(*ConnectedResponse)(nil),           // 18: grpchook.ConnectedResponse
	(*DisconnectedResponse)(nil),        // 19: grpchook.DisconnectedResponse
	(*AuthenticateResponse)(nil),        // 20: grpchook.AuthenticateResponse
	(*CheckAclResponse)(nil),            // 21: grpchook.CheckAclResponse
	(*SubscribeResponse)(nil),           // 22: grpchook.SubscribeResponse
	(*UnsubscribeResponse)(nil),         // 23: grpchook.UnsubscribeResponse
	(*SessionCreatedResponse)(nil),      // 24: grpchook.SessionCreatedResponse
	(*SessionSubscribedResponse)(nil),   // 25: grpchook.SessionSubscribedResponse
	(*SessionUnsubscribedResponse)(nil), // 26: grpchook.SessionUnsubscribedResponse
	(*SessionTerminatedResponse)(nil),   // 27: grpchook.SessionTerminatedResponse
	(*MessagePublishResponse)(nil),      // 28: grpchook.MessagePublishResponse
	(*MessageDeliveredResponse)(nil),    // 29: grpchook.MessageDeliveredResponse
	(*MessageAckedResponse)(nil),        // 30: grpchook.MessageAckedResponse
	(*MessageDroppedResponse)(nil),      // 31: grpchook.MessageDroppedResponse
}
var file_grpchook_proto_depIdxs = []int32{
	0,  // 0: grpchook.RpcHook.ClientConnect:input_type -> grpchook.ConnectRequest
	1,  // 1: grpchook.RpcHook.ClientConnack:input_type -> grpchook.ConnackRequest
	2,  // 2: grpchook.RpcHook.ClientConnected:input_type -> grpchook.ConnectedRequest
	3,  // 3: grpchook.RpcHook.ClientDisconnected:input_type -> grpchook.DisconnectedRequest
	4,  // 4: grpchook.RpcHook.ClientAuthenticate:input_type -> grpchook.AuthenticateRequest
	5,  // 5: grpchook.RpcHook.ClientCheckAcl:input_type -> grpchook.CheckAclRequest
	6,  // 6: grpchook.RpcHook.ClientSubscribe:input_type -> grpchook.SubscribeRequest
	7,  // 7: grpchook.RpcHook.ClientUnsubscribe:input_type -> grpchook.UnsubscribeRequest
	8,  // 8: grpchook.RpcHook.SessionCreated:input_type -> grpchook.SessionCreatedRequest
	9,  // 9: grpchook.RpcHook.SessionSubscribed:input_type -> grpchook.SessionSubscribedRequest
	10, // 10: grpchook.RpcHook.SessionUnsubscribed:input_type -> grpchook.SessionUnsubscribedRequest
	11, // 11: grpchook.RpcHook.SessionTerminated:input_type -> grpchook.SessionTerminatedRequest
	12, // 12: grpchook.RpcHook.MessagePublish:input_type -> grpchook.MessagePublishRequest
	13, // 13: grpchook.RpcHook.MessageDelivered:input_type -> grpchook.MessageDeliveredRequest
	14, // 14: grpchook.RpcHook.MessageAcked:input_type -> grpchook.MessageAckedRequest
	15, // 15: grpchook.RpcHook.MessageDropped:input_type -> grpchook.MessageDroppedRequest
	16, // 16: grpchook.RpcHook.ClientConnect:output_type -> grpchook.ConnectResponse
	17, // 17: grpchook.RpcHook.ClientConnack:output_type -> grpchook.ConnackResponse
	18, // 18: grpchook.RpcHook.ClientConnected:output_type -> grpchook.ConnectedResponse
	19, // 19: grpchook.RpcHook.ClientDisconnected:output_type -> grpchook.DisconnectedResponse
	20, // 20: grpchook.RpcHook.ClientAuthenticate:output_type -> grpchook.AuthenticateResponse
	21, // 21: grpchook.RpcHook.ClientCheckAcl:output_type -> grpchook.CheckAclResponse
	22, // 22: grpchook.RpcHook.ClientSubscribe:output_type -> grpchook.SubscribeResponse
	23, // 23: grpchook.RpcHook.ClientUnsubscribe:output_type -> grpchook.UnsubscribeResponse
	24, // 24: grpchook.RpcHook.SessionCreated:output_type -> grpchook.SessionCreatedResponse
	25, // 25: grpchook.RpcHook.SessionSubscribed:output_type -> grpchook.SessionSubscribedResponse
	26, // 26: grpchook.RpcHook.SessionUnsubscribed:output_type -> grpchook.SessionUnsubscribedResponse
	27, // 27: grpchook.RpcHook.SessionTerminated:output_type -> grpchook.SessionTerminatedResponse
	28, // 28: grpchook.RpcHook.MessagePublish:output_type -> grpchook.MessagePublishResponse
	29, // 29: grpchook.RpcHook.MessageDelivered:output_type -> grpchook.MessageDeliveredResponse
	30, // 30: grpchook.RpcHook.MessageAcked:output_type -> grpchook.MessageAckedResponse
	31, // 31: grpchook.RpcHook.MessageDropped:output_type -> grpchook.MessageDroppedResponse
	16, // [16:32] is the sub-list for method output_type
	0,  // [0:16] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_grpchook_proto_init() }
func file_grpchook_proto_init() {
	if File_grpchook_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpchook_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionCreatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionSubscribedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUnsubscribedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionTerminatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDeliveredRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageAckedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDroppedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAclResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionCreatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionSubscribedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUnsubscribedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionTerminatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDeliveredResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageAckedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpchook_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDroppedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpchook_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpchook_proto_goTypes,
		DependencyIndexes: file_grpchook_proto_depIdxs,
		MessageInfos:      file_grpchook_proto_msgTypes,
	}.Build()
	File_grpchook_proto = out.File
	file_grpchook_proto_rawDesc = nil
	file_grpchook_proto_goTypes = nil
	file_grpchook_proto_depIdxs = nil
}
